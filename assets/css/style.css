/* Default font for all items */
* {
    font-family: 'Arial', 'Helvetica Neue', Helvetica, sans-serif;
    /* includes all except margin in width, height.  Way better than default*/
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;

}

/* The instructions say to use 960 as width so I did.  I didnt really want to do this */
/* because I want it to be mroe flexible based on window size, platform etc. */
body {
    background-color: #777;
    color: #777;
    width: 960px;
    font-size: '18px';
}

/* header nav and footer mostly same.  Using line-height=height allows for vertical centering */
header,
nav,
footer {
    margin: 0px auto 1.5% auto;
    width: 100%;
    height: 75px;
    line-height: 75px;
    text-align: center;
    border: 1px solid #ebebeb;
    background-color: #ebebeb;
    color: #777;
    opacity: 1;
}

/* This seems to be the best way to veritcally align text inside box  vertical-aign doesnt work */
span.vCenter {
    display: inline-block;
    vertical-align: middle;
    line-height: normal;
}

/* Slightly smaller margin after header*/
header {
    margin: 0px auto 1% auto;
}

/* Container is used to provide flex display for better positioning control of items within it */
.container {
    display: flex;
    justify-items: center;
    flex-direction: row;
    border: 1px solid gray;
    padding: 0;
}

/* section on left about 2/3rds and aside on right.  Very simlar otherwise */
/* I did not fix these widths because I wanted them to be sized based on their */
/* container and browser etc.  Fixing the width vs using % is just too restrictive */
section,
aside {
    display: block;
    height: auto;
    line-height: 50px;
    text-align: center;
    border: 1px solid #ebebeb;
    background-color: #ebebeb;
    color: #777;
}

/* Section takes up about 2/3 */
section {
    width: 60%;
    margin: 0 1.5% 1.5% auto;
}

/* article takes up about 1/3 */
aside {
    width: 40%;
    margin: 0 auto 1.5% 0;
}

/* article is a box with article name surrounding contents */
article {
    border: 1px solid #777;
    margin: 5px;
    text-align: center;
    display: block;
    background-color: #777;
    color: #ebebeb;
}

/* title and content hold the article title and its */
#title,
#content {
    border: 1px solid #777;
    background: #ebebeb;
    color: #777;
    margin: 2%;
}

/* title is bold */
#title {
    font-weight: bold;
}


/* This was used when I was using float for the boxes.  Using float was a pain and */
/* not recommended for this situation, but I left this in here so I can remember that */
/* you must always clear the floats after using so the rest of html gets back on normal flow */
/* float should really just be used when you want stuff to truly float / wrap around something */
footer {
    clear: both;
    margin-bottom: 0;
}